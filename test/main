#!/usr/bin/env bash



source_dir=$( cd "$(dirname "${BASH_SOURCE}")" ; pwd -P )

# include the lib
source ${source_dir}/../dox


printf "\
usage: git flux <sub-command> [action] [action-args...] [-h]


$(t_heading "git-flux")

git commands for fluent, team-oriented workflow.


$(t_subheading "flags")

$(t_code_definition \
"-h" \
"shows the f***ing manual. works everywhere, and context dependent.
this means you can $(t_code "git flux -h"), and also $(t_code "git flux feature -h") \
or $(t_code "git flux feature start -h")." \
)

$(t_subheading "available subcommands")

$(t_code_definition \
"init" \
"initialize the git-flux configuration survey." \
)
$(t_code_definition \
"$(t_fg_blue "feature")" \
"handle feature level actions." \
)
$(t_code_definition \
"$(t_fg_yellow "team")" \
"handle integration across team members and their features." \
)
$(t_code_definition \
"$(t_fg_magenta "integration")" \
"handle integration across teams." \
)
$(t_code_definition \
"$(t_fg_green "rc")" \
"handle lifecycle of release-candidates." \
)
$(t_code_definition \
"$(t_fg_red "hf")" \
"handle lifecycle of hot-fixes." \
)

refer to each subcommand's help menu for an in-depth description of its actions (e.g. $(t_code "git flux init -h")).

"
